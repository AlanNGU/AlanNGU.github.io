<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>git项目部署</title>
    <url>/2020/01/15/deployProject/</url>
    <content><![CDATA[<ul>
<li><p>点击 + 按钮选择新建仓库<br><img src="createRepository.png" alt=""><br><img src="createRepository2.png" alt=""><br><img src="createRepository3.png" alt=""></p>
</li>
<li><p>初始化本地仓库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></li>
<li><p>关联本地仓库与远程仓库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add origin https:&#x2F;&#x2F;gitee.com&#x2F;xxx&#x2F;testRepository.git</span><br></pre></td></tr></table></figure></li>
<li><p>在push之前先pull</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git pull origin master --allow-unrelated-histories</span><br></pre></td></tr></table></figure>
</li>
<li><p>将本地仓库push到远程仓库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &#39;first commit&#39;</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>


</li>
</ul>
]]></content>
      <categories>
        <category>git</category>
        <category>deploy</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>deploy</tag>
      </tags>
  </entry>
  <entry>
    <title>Lombok Document</title>
    <url>/2019/06/16/LombokDocument/</url>
    <content><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><ul>
<li>lombok可以减少程序中冗长简单的代码，自动生成Getter、Setter、构造函数和hashCode等函数。</li>
</ul>
<h3 id="Use-Lombok-In-Intellij-IDEA"><a href="#Use-Lombok-In-Intellij-IDEA" class="headerlink" title="Use Lombok In Intellij IDEA"></a>Use Lombok In Intellij IDEA</h3><h4 id="Install-lombok-Plugin"><a href="#Install-lombok-Plugin" class="headerlink" title="Install lombok Plugin"></a>Install lombok Plugin</h4><p>通过Intellij的插件中心安装 settings &gt;&gt; Plugins</p>
<h4 id="Add-Dependency"><a href="#Add-Dependency" class="headerlink" title="Add Dependency"></a>Add Dependency</h4><p>在使用Lombok注解时需要在pom中添加依赖</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.projectlombok&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;lombok&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.16.8&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>

<h3 id="Lombok-features"><a href="#Lombok-features" class="headerlink" title="Lombok features"></a>Lombok features</h3><h4 id="val"><a href="#val" class="headerlink" title="val"></a>val</h4><p>你可以使用<code>val</code>来声明<strong>局部变量</strong>,不用声明变量的具体类型,编译器会根据初始化表达式中推断出当前局部变量的类型,同时此变量声明为<code>final</code>.初始化表达式是必需的,此功能仅适用于<strong>局部变量</strong>和<strong>foreach循环</strong>，不适用于<u>字段</u>。</p>
<h4 id="NonNull"><a href="#NonNull" class="headerlink" title="@NonNull"></a>@NonNull</h4><p>可以将<code>@NonNull</code>用在方法或者构造函数的参数上,<u>Lombok</u>将自动生成非空判断. 如果你使用<u>Lombok</u>生成了整个方法或者构造函数(比如<code>@Data</code>),<u>Lombok</u>会默认使用<code>@NonNull</code>修饰字段形成非空判断. 但是,如果你显式使用@NonNull修饰了自己的方法或构造函数上的参数,那么它将只在你修饰的参数上生成非空判断.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.NonNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NonNullExample</span> <span class="keyword">extends</span> <span class="title">Something</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">NonNullExample</span><span class="params">(@NonNull Person person)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(<span class="string">"Hello"</span>);</span><br><span class="line">    <span class="keyword">this</span>.name = person.getName();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>$\Downarrow$$\Downarrow$相当于如下代码$\Downarrow$$\Downarrow$</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.NonNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NonNullExample</span> <span class="keyword">extends</span> <span class="title">Something</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">NonNullExample</span><span class="params">(@NonNull Person person)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(<span class="string">"Hello"</span>);</span><br><span class="line">    <span class="keyword">if</span> (person == <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"person is marked @NonNull but is null"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.name = person.getName();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="Cleanup"><a href="#Cleanup" class="headerlink" title="@Cleanup"></a>@Cleanup</h4><p>自动管理资源，用在局部变量之前，在当前变量范围内即将执行完毕退出之前会自动清理资源，自动生成try-finally这样的代码流</p>
<h4 id="Getter-Setter"><a href="#Getter-Setter" class="headerlink" title="@Getter @Setter"></a>@Getter @Setter</h4><p>用在属性上，不需要自己手写Setter和getter方法了，还可以指定访问范围<br>将@Getter和@Setter注解在类上将会自动生成所有字段的getter和setter方法,如果不需要生成所有,可以在需要生成getter和setter的字段前修饰.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Getter</span> <span class="meta">@Setter</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String age;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>$\Downarrow$$\Downarrow$相当于如下代码$\Downarrow$$\Downarrow$</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String age;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(String age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getGender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGender</span><span class="params">(String gender)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h4 id="ToString"><a href="#ToString" class="headerlink" title="@ToString"></a>@ToString</h4><p>用在类上，可以自动复写<code>toString</code>方法，它将默认打印你的类名和所有字段并用逗号分隔.还可以添加其他的参数，例如@ToString( exclude = “id” )排除id属性，或者使用<code>ToString.Inclued</code>和 <code>ToString.Exclude</code>来控制打印或不打印指定字段.<br>@ToString(callSuper=true,includeFieldNames=true)调用父类的toString方法，包含所有属性</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ToStringExample</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STATIC_VAR = <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  <span class="keyword">private</span> Shape shape = <span class="keyword">new</span> Square(<span class="number">5</span>, <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">private</span> String[] tags;</span><br><span class="line">  <span class="meta">@ToString</span>.Exclude <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@ToString</span>(callSuper=<span class="keyword">true</span>, includeFieldNames=<span class="keyword">true</span>)</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Square</span> <span class="keyword">extends</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> width, height;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Square</span><span class="params">(<span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.width = width;</span><br><span class="line">      <span class="keyword">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h4 id="EqualsAndHashCode"><a href="#EqualsAndHashCode" class="headerlink" title="@EqualsAndHashCode"></a>@EqualsAndHashCode</h4><p>用在类上，自动生成<code>equals</code>方法和<code>hashCode</code>方法</p>
<h4 id="NoArasConstructor"><a href="#NoArasConstructor" class="headerlink" title="@NoArasConstructor"></a>@NoArasConstructor</h4><p>自动生成<code>无参构造函数</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@NoArgsConstructor</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String age;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>$\Downarrow$$\Downarrow$相当于如下代码$\Downarrow$$\Downarrow$</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String age;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="comment">// 构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="AllAragsConstructor"><a href="#AllAragsConstructor" class="headerlink" title="@AllAragsConstructor"></a>@AllAragsConstructor</h4><p>生成全参构造方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String age;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>$\Downarrow$$\Downarrow$相当于如下代码$\Downarrow$$\Downarrow$</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String age;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name, String age, String gender)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h4 id="RequiredArgsConstructor"><a href="#RequiredArgsConstructor" class="headerlink" title="@RequiredArgsConstructor"></a>@RequiredArgsConstructor</h4><p><code>@RequiredArgsConstructor</code>生成一个包含标识了<strong>NonNull</strong>的变量的构造方法</p>
<h4 id="Data"><a href="#Data" class="headerlink" title="@Data"></a>@Data</h4><p>注解在类上，相当于同时使用了@ToString，@EqualsAndHashCode，@Getter，@Setter和@RequiredArgsConstructor这些注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String firstname;</span><br><span class="line">    <span class="keyword">private</span> String lastname;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>$\Downarrow$$\Downarrow$相当于如下代码$\Downarrow$$\Downarrow$</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String firstname;</span><br><span class="line">    <span class="keyword">private</span> String lastname;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFirstname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> firstname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLastname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> lastname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFirstname</span><span class="params">(String firstname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.firstname = firstname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLastname</span><span class="params">(String lastname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.lastname = lastname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> hash = <span class="number">7</span>;</span><br><span class="line">        hash = <span class="number">17</span> * hash + Objects.hashCode(<span class="keyword">this</span>.firstname);</span><br><span class="line">        hash = <span class="number">17</span> * hash + Objects.hashCode(<span class="keyword">this</span>.lastname);</span><br><span class="line">        <span class="keyword">return</span> hash;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == obj) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (obj == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (getClass() != obj.getClass()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> Person other = (Person) obj;</span><br><span class="line">        <span class="keyword">if</span> (!Objects.equals(<span class="keyword">this</span>.firstname, other.firstname)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!Objects.equals(<span class="keyword">this</span>.lastname, other.lastname)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">canEqual</span><span class="params">(<span class="keyword">final</span> Object other)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> other <span class="keyword">instanceof</span> Person;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Person&#123;"</span> + <span class="string">"firstname="</span> + firstname + <span class="string">", lastname="</span> + lastname + <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Value"><a href="#Value" class="headerlink" title="@Value"></a>@Value</h4><p>用在类上，是@Data的不可变形式，相当于属性为final声明，只提供getter方法，而不是提供setter方法</p>
<h4 id="Builder"><a href="#Builder" class="headerlink" title="@Builder"></a>@Builder</h4><p>可以让类的实例化通过一条语句链式生成,比如$\Downarrow$</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Person.builder().name(<span class="string">"Adam Savage"</span>).city(<span class="string">"San Francisco"</span>)</span><br></pre></td></tr></table></figure>


<h3 id="Reference-Documents"><a href="#Reference-Documents" class="headerlink" title="Reference Documents"></a>Reference Documents</h3><ul>
<li><a href="https://projectlombok.org/features/all" target="_blank" rel="noopener">https://projectlombok.org/features/all</a></li>
<li><a href="https://stevenmwesigwa.com" target="_blank" rel="noopener">https://stevenmwesigwa.com</a></li>
</ul>
<h3 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h3><ul>
<li><a href="https://projectlombok.org/download" target="_blank" rel="noopener">https://projectlombok.org/download</a></li>
</ul>
]]></content>
      <categories>
        <category>Lombok</category>
      </categories>
      <tags>
        <tag>Lombok</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown Basic Doc</title>
    <url>/2018/10/15/markdownDoc/</url>
    <content><![CDATA[<h3 id="Headers"><a href="#Headers" class="headerlink" title="Headers"></a>Headers</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#      一级标题</span><br><span class="line">##     二级标题</span><br><span class="line">###    三级标题</span><br><span class="line">####   四级标题</span><br><span class="line">#####  五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="Paragraph"><a href="#Paragraph" class="headerlink" title="Paragraph"></a>Paragraph</h3><h4 id="Font"><a href="#Font" class="headerlink" title="Font"></a>Font</h4><p>  <code>*斜体文本demo1*</code> <code>**粗体文本demo1**</code>  <code>***斜粗体文本demo1***</code>  </p>
<p>  <code>_斜体文本demo2_</code>  <code>__粗体文本demo2__</code>  <code>___斜粗体文本demo2___</code>  </p>
<p>$\Downarrow$$\Downarrow$显示效果$\Downarrow$$\Downarrow$</p>
<ul>
<li><em>斜体文字demo1</em>   <strong>粗体文本demo1</strong>   <strong><em>斜粗体文本demo1</em></strong></li>
<li><em>斜体文本demo2</em>   <strong>粗体文本demo2</strong>   <strong><em>斜粗体文本demo2</em></strong></li>
</ul>
<h4 id="Dividing-Line"><a href="#Dividing-Line" class="headerlink" title="Dividing Line"></a>Dividing Line</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、 ***</span><br><span class="line">2、 * * *</span><br><span class="line">3、 *****</span><br><span class="line">4、 - - -</span><br><span class="line">5、 ------------</span><br></pre></td></tr></table></figure>

<h4 id="Strikethrough"><a href="#Strikethrough" class="headerlink" title="Strikethrough"></a>Strikethrough</h4><p>  在需要添加删除线的文字两端各添加两个波浪线<code>~~</code>  </p>
<p><code>~~testText~~</code> $\Rightarrow$ <del>testText</del></p>
<h4 id="Underline"><a href="#Underline" class="headerlink" title="Underline"></a>Underline</h4><p><code>&lt;u&gt;下划线文本&lt;/u&gt;</code> $\Rightarrow$ <u>下划线文本</u></p>
<hr>
<h3 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h3><h4 id="Unordered"><a href="#Unordered" class="headerlink" title="Unordered"></a>Unordered</h4><p>无序列表可以使用<code>*</code> <code>+</code> <code>-</code>作为标记 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* 第一条语句</span><br><span class="line">* 第二条语句</span><br><span class="line">* 第三条语句</span><br><span class="line"></span><br><span class="line">+ 第一条语句</span><br><span class="line">+ 第二条语句</span><br><span class="line">+ 第三条语句</span><br><span class="line"></span><br><span class="line">- 第一条语句</span><br><span class="line">- 第二条语句</span><br><span class="line">- 第三条语句</span><br></pre></td></tr></table></figure>

<p>$\Downarrow$$\Downarrow$显示效果$\Downarrow$$\Downarrow$</p>
<ul>
<li>第一条语句</li>
<li>第二条语句</li>
<li>第三条语句  </li>
</ul>
<h4 id="Ordered"><a href="#Ordered" class="headerlink" title="Ordered"></a>Ordered</h4><p>有序列表使用数字并加上<code>.</code>来表示，注意点后有空格</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.第一项</span><br><span class="line">2.第二项</span><br><span class="line">3.第三项</span><br></pre></td></tr></table></figure>


<p>$\Downarrow$$\Downarrow$ 显示效果$\Downarrow$ $\Downarrow$   </p>
<ol>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ol>
<hr>
<h3 id="Blockquotes"><a href="#Blockquotes" class="headerlink" title="Blockquotes"></a>Blockquotes</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;   java</span><br><span class="line">&gt;&gt;  java.lang</span><br><span class="line">&gt;&gt;&gt; java.lang.Thread</span><br></pre></td></tr></table></figure>
<p>$\Downarrow$$\Downarrow$显示效果$\Downarrow$$\Downarrow$</p>
<blockquote>
<p>java</p>
<blockquote>
<p>java.lang</p>
<blockquote>
<p>java.lang.Thread</p>
</blockquote>
</blockquote>
</blockquote>
<hr>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><h4 id="Inline-code"><a href="#Inline-code" class="headerlink" title="Inline code"></a>Inline code</h4><p>如果要突出显示段落上的一个函数或者代码片段可以使用反引号（`）把它包起来 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;checkUserName&#96;函数</span><br></pre></td></tr></table></figure>
<p>$\Downarrow$$\Downarrow$显示效果如下$\Downarrow$$\Downarrow$<br><code>checkUserName()</code>函数</p>
<h4 id="Syntax-highlighting"><a href="#Syntax-highlighting" class="headerlink" title="Syntax highlighting"></a>Syntax highlighting</h4><p>代码区块使用四个空格或者一个Tab键<br>也可以使用```包裹一段代码，并指定一种语言.也可以不指定代码语言</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;&#96;&#96;javascript</span><br><span class="line">$(document).ready(function () &#123;</span><br><span class="line">    alert(&#39;RUNOOB&#39;);</span><br><span class="line">&#125;);</span><br><span class="line">&#96;&#96;&#96;</span><br></pre></td></tr></table></figure>
<p>$\Downarrow$$\Downarrow$显示效果$\Downarrow$$\Downarrow$</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">'Welcome!'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h3><p>链接使用方法如下：  </p>
<ul>
<li><code>[google](http://www.google.com)</code> $\Rightarrow$ <a href="http://www.google.com" target="_blank" rel="noopener">google</a></li>
<li><code>www.google.com</code> $\Rightarrow$ <a href="http://www.google.com" target="_blank" rel="noopener">www.google.com</a></li>
</ul>
<p>这个链接使用变量代替<code>[google][1]</code>，并在文末添加此链接的地址<code>[1]:http://www.google.com</code> $\Rightarrow$ <a href="http://www.google.com" target="_blank" rel="noopener">google</a></p>
<hr>
<h3 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h3><p>Markdown图片的基本语法格式如下：<br><code>![alt girl]（girl.png）</code> $\Rightarrow$ <img src="girl.png" alt="girl"><br>也可以像使用网址链接那样使用变量赋值<br><code>![alt girl][2]</code> $\Rightarrow$ <img src="girl.png" alt="alt girl"></p>
<h3 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h3><p>Markdown制作表格使用<code>|</code>来分隔不同的单元格，使用<code>-</code>来分隔表头和其他行。<br>语法格式如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| 表头 | 表头 | 表头 |</span><br><span class="line">| --- | ---  | --- |</span><br><span class="line">|单元格|单元格|单元格|</span><br><span class="line">|单元格|单元格|单元格|</span><br></pre></td></tr></table></figure>
<p>$\Downarrow$$\Downarrow$显示效果$\Downarrow$$\Downarrow$</p>
<table>
<thead>
<tr>
<th>表头</th>
<th>表头</th>
<th>表头</th>
</tr>
</thead>
<tbody><tr>
<td>单元格</td>
<td>单元格</td>
<td>单元格</td>
</tr>
<tr>
<td>单元格</td>
<td>单元格</td>
<td>单元格</td>
</tr>
</tbody></table>
<p>我们可以设置表格的对齐方式：</p>
<ul>
<li><code>-:</code>  设置内容和标题栏居右对齐</li>
<li><code>:-</code>  设置内容和标题栏居左对齐</li>
<li><code>:-:</code> 设置内容和标题栏居中对齐</li>
</ul>
<center>$\Downarrow$$\Downarrow$显示效果$\Downarrow$$\Downarrow$<center>


<p><img src="table.png" alt="alt table"></p>
<hr>
<h3 id="Reference-Documents"><a href="#Reference-Documents" class="headerlink" title="Reference Documents"></a>Reference Documents</h3><ul>
<li><a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">https://www.runoob.com/markdown/md-tutorial.html</a></li>
<li><a href="https://guides.github.com/features/mastering-markdown/" target="_blank" rel="noopener">https://guides.github.com/features/mastering-markdown/</a></li>
</ul>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
</search>
